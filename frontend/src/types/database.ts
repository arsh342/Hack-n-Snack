// src/types/database.ts

export interface Database {
  public: {
    Tables: {
      products: {
        Row: {
          id: string;
          name: string;
          description: string | null;
          price: number;
          image_url: string | null;
          category: string;
          available: boolean;
          canteen_id: string;
          cuisine_type: string;
          preparation_time: number;
          dietary_info: {
            vegetarian: boolean;
            vegan: boolean;
            gluten_free: boolean;
            contains_nuts: boolean;
            spicy_level: number;
          };
          customization_options: {
            id: string;
            name: string;
            options: {
              id: string;
              name: string;
              price: number;
            }[];
          }[];
          rating: number;
          review_count: number;
          created_at: string;
        };
        Insert: {
          id?: string; // Optional for auto-generated IDs
          name: string;
          description?: string | null;
          price: number;
          image_url?: string | null;
          category: string;
          available?: boolean; // Default could be true
          canteen_id: string;
          cuisine_type: string;
          preparation_time: number;
          dietary_info: {
            vegetarian: boolean;
            vegan: boolean;
            gluten_free: boolean;
            contains_nuts: boolean;
            spicy_level: number;
          };
          customization_options: {
            id: string;
            name: string;
            options: {
              id: string;
              name: string;
              price: number;
            }[];
          }[];
          rating?: number; // Optional on insert
          review_count?: number; // Optional on insert
          created_at?: string; // Auto-generated by Supabase
        };
        Update: {
          id?: string;
          name?: string;
          description?: string | null;
          price?: number;
          image_url?: string | null;
          category?: string;
          available?: boolean;
          canteen_id?: string;
          cuisine_type?: string;
          preparation_time?: number;
          dietary_info?: {
            vegetarian: boolean;
            vegan: boolean;
            gluten_free: boolean;
            contains_nuts: boolean;
            spicy_level: number;
          };
          customization_options?: {
            id: string;
            name: string;
            options: {
              id: string;
              name: string;
              price: number;
            }[];
          }[];
          rating?: number;
          review_count?: number;
          created_at?: string;
        };
      };
      canteens: {
        Row: {
          id: string;
          name: string;
          description: string | null;
          location: string;
          opening_time: string;
          closing_time: string;
          rating: number;
          total_orders: number;
          created_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          description?: string | null;
          location: string;
          opening_time: string;
          closing_time: string;
          rating?: number;
          total_orders?: number;
          created_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          description?: string | null;
          location?: string;
          opening_time?: string;
          closing_time?: string;
          rating?: number;
          total_orders?: number;
          created_at?: string;
        };
      };
      virtualOutlets: {
        Row: {
          id: string;
          name: string;
          cuisine_type: string;
          description: string;
          image_url: string;
          rating: number;
          delivery_time: number;
          is_open: boolean;
          created_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          cuisine_type: string;
          description: string;
          image_url: string;
          rating?: number;
          delivery_time: number;
          is_open?: boolean;
          created_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          cuisine_type?: string;
          description?: string;
          image_url?: string;
          rating?: number;
          delivery_time?: number;
          is_open?: boolean;
          created_at?: string;
        };
      };
      orders: {
        Row: {
          id: string;
          user_id: string;
          canteen_id: string;
          status: 'pending' | 'preparing' | 'ready' | 'completed' | 'cancelled';
          payment_status: 'pending' | 'paid' | 'failed' | 'refunded';
          payment_method: 'stripe' | 'razorpay' | 'cash';
          payment_id: string | null;
          total_amount: number;
          delivery_notes: string | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          user_id: string;
          canteen_id: string;
          status?: 'pending' | 'preparing' | 'ready' | 'completed' | 'cancelled';
          payment_status?: 'pending' | 'paid' | 'failed' | 'refunded';
          payment_method: 'stripe' | 'razorpay' | 'cash';
          payment_id?: string | null;
          total_amount: number;
          delivery_notes?: string | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          user_id?: string;
          canteen_id?: string;
          status?: 'pending' | 'preparing' | 'ready' | 'completed' | 'cancelled';
          payment_status?: 'pending' | 'paid' | 'failed' | 'refunded';
          payment_method?: 'stripe' | 'razorpay' | 'cash';
          payment_id?: string | null;
          total_amount?: number;
          delivery_notes?: string | null;
          created_at?: string;
        };
      };
      order_items: {
        Row: {
          id: string;
          order_id: string;
          product_id: string;
          quantity: number;
          price: number;
          customizations: Record<string, string>;
          created_at: string;
        };
        Insert: {
          id?: string;
          order_id: string;
          product_id: string;
          quantity: number;
          price: number;
          customizations?: Record<string, string>;
          created_at?: string;
        };
        Update: {
          id?: string;
          order_id?: string;
          product_id?: string;
          quantity?: number;
          price?: number;
          customizations?: Record<string, string>;
          created_at?: string;
        };
      };
      // Placeholder for favorites (unimplemented table)
      favorites: {
        Row: {
          user_id: string;
          product_id: string;
        };
        Insert: {
          user_id: string;
          product_id: string;
        };
        Update: {
          user_id?: string;
          product_id?: string;
        };
      };
      // Add support_tickets if implemented
      support_tickets: {
        Row: {
          id: string;
          user_id: string;
          canteen_id: string | null;
          subject: string;
          status: 'open' | 'in_progress' | 'resolved' | 'closed';
          priority: 'low' | 'medium' | 'high';
          created_at: string;
          resolved_at: string | null;
        };
        Insert: {
          id?: string;
          user_id: string;
          canteen_id?: string | null;
          subject: string;
          status?: 'open' | 'in_progress' | 'resolved' | 'closed';
          priority?: 'low' | 'medium' | 'high';
          created_at?: string;
          resolved_at?: string | null;
        };
        Update: {
          id?: string;
          user_id?: string;
          canteen_id?: string | null;
          subject?: string;
          status?: 'open' | 'in_progress' | 'resolved' | 'closed';
          priority?: 'low' | 'medium' | 'high';
          created_at?: string;
          resolved_at?: string | null;
        };
      };
      // Add chat_messages if implemented
      chat_messages: {
        Row: {
          id: string;
          ticket_id: string;
          sender_id: string;
          sender_type: 'user' | 'canteen' | 'admin';
          content: string;
          attachments: {
            url: string;
            type: string;
            name: string;
          }[] | null;
          read_by: string[];
          created_at: string;
        };
        Insert: {
          id?: string;
          ticket_id: string;
          sender_id: string;
          sender_type: 'user' | 'canteen' | 'admin';
          content: string;
          attachments?: {
            url: string;
            type: string;
            name: string;
          }[] | null;
          read_by?: string[];
          created_at?: string;
        };
        Update: {
          id?: string;
          ticket_id?: string;
          sender_id?: string;
          sender_type?: 'user' | 'canteen' | 'admin';
          content?: string;
          attachments?: {
            url: string;
            type: string;
            name: string;
          }[] | null;
          read_by?: string[];
          created_at?: string;
        };
      };
    };
  };
}